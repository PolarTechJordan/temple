{"ast":null,"code":"import { useRouter } from 'vue-router';\nimport { useAppStore } from '@/stores/app';\nexport default {\n  name: 'LoginPage',\n  setup() {\n    const router = useRouter();\n    const appStore = useAppStore();\n\n    // 语言感知的导航函数\n    const navigateTo = path => {\n      const currentPath = router.currentRoute.value.path;\n      const isEnglish = currentPath.startsWith('/en');\n      const targetPath = isEnglish ? `/en${path}` : path;\n      router.push(targetPath);\n    };\n    return {\n      router,\n      appStore,\n      navigateTo\n    };\n  },\n  data() {\n    return {\n      connecting: null,\n      error: null,\n      wallets: [{\n        id: 'metamask',\n        name: 'MetaMask',\n        description: '连接到MetaMask钱包',\n        icon: '/images/metamask.png'\n      }, {\n        id: 'phantom',\n        name: 'Phantom',\n        description: '连接到Phantom钱包',\n        icon: '/images/phantom.png'\n      }, {\n        id: 'walletconnect',\n        name: 'WalletConnect',\n        description: '使用WalletConnect连接',\n        icon: '/images/walletconnect.png'\n      }]\n    };\n  },\n  methods: {\n    async connectWallet(wallet) {\n      this.connecting = wallet.id;\n      this.error = null;\n      try {\n        // 模拟钱包连接\n        await new Promise(resolve => setTimeout(resolve, 2000));\n\n        // 这里应该实际连接钱包\n        console.log('连接钱包:', wallet.name);\n\n        // 使用 Pinia store 保存连接状态\n        const mockAddress = '0x' + Math.random().toString(16).substr(2, 40);\n        this.appStore.connectWallet(mockAddress, wallet.id);\n\n        // 跳转到算命页面\n        this.navigateTo('/calculate');\n      } catch (error) {\n        this.error = '连接失败，请重试';\n        console.error('钱包连接失败:', error);\n      } finally {\n        this.connecting = null;\n      }\n    }\n  }\n};","map":{"version":3,"names":["useRouter","useAppStore","name","setup","router","appStore","navigateTo","path","currentPath","currentRoute","value","isEnglish","startsWith","targetPath","push","data","connecting","error","wallets","id","description","icon","methods","connectWallet","wallet","Promise","resolve","setTimeout","console","log","mockAddress","Math","random","toString","substr"],"sources":["/Users/Jordan/workSpace/temple/src/views/LoginPage.vue"],"sourcesContent":["<template>\n  <div class=\"login-page\">\n    <div class=\"container\">\n      <h1>{{ $t('login.title') }}</h1>\n      <div class=\"wallet-container\">\n        <div class=\"wallet-list\">\n          <div \n            v-for=\"wallet in wallets\" \n            :key=\"wallet.id\"\n            @click=\"connectWallet(wallet)\"\n            class=\"wallet-item\"\n            :class=\"{ 'connecting': connecting === wallet.id }\"\n          >\n            <div class=\"wallet-icon\">\n              <img :src=\"wallet.icon\" :alt=\"wallet.name\" />\n            </div>\n            <div class=\"wallet-info\">\n              <h3>{{ wallet.name }}</h3>\n              <p>{{ wallet.description }}</p>\n            </div>\n            <div class=\"wallet-arrow\">→</div>\n          </div>\n        </div>\n        <div v-if=\"error\" class=\"error-message\">\n          {{ error }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { useRouter } from 'vue-router'\nimport { useAppStore } from '@/stores/app'\n\nexport default {\n  name: 'LoginPage',\n  setup() {\n    const router = useRouter()\n    const appStore = useAppStore()\n    \n    // 语言感知的导航函数\n    const navigateTo = (path) => {\n      const currentPath = router.currentRoute.value.path\n      const isEnglish = currentPath.startsWith('/en')\n      const targetPath = isEnglish ? `/en${path}` : path\n      router.push(targetPath)\n    }\n    \n    return {\n      router,\n      appStore,\n      navigateTo\n    }\n  },\n  data() {\n    return {\n      connecting: null,\n      error: null,\n      wallets: [\n        {\n          id: 'metamask',\n          name: 'MetaMask',\n          description: '连接到MetaMask钱包',\n          icon: '/images/metamask.png'\n        },\n        {\n          id: 'phantom',\n          name: 'Phantom',\n          description: '连接到Phantom钱包',\n          icon: '/images/phantom.png'\n        },\n        {\n          id: 'walletconnect',\n          name: 'WalletConnect',\n          description: '使用WalletConnect连接',\n          icon: '/images/walletconnect.png'\n        }\n      ]\n    }\n  },\n  methods: {\n    async connectWallet(wallet) {\n      this.connecting = wallet.id\n      this.error = null\n      \n      try {\n        // 模拟钱包连接\n        await new Promise(resolve => setTimeout(resolve, 2000))\n        \n        // 这里应该实际连接钱包\n        console.log('连接钱包:', wallet.name)\n        \n        // 使用 Pinia store 保存连接状态\n        const mockAddress = '0x' + Math.random().toString(16).substr(2, 40)\n        this.appStore.connectWallet(mockAddress, wallet.id)\n        \n        // 跳转到算命页面\n        this.navigateTo('/calculate')\n        \n      } catch (error) {\n        this.error = '连接失败，请重试'\n        console.error('钱包连接失败:', error)\n      } finally {\n        this.connecting = null\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login-page {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem;\n}\n\n.container {\n  max-width: 500px;\n  width: 100%;\n}\n\nh1 {\n  text-align: center;\n  color: white;\n  margin-bottom: 2rem;\n  font-size: 2.5rem;\n}\n\n.wallet-container {\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 20px;\n  padding: 2rem;\n  backdrop-filter: blur(10px);\n}\n\n.wallet-list {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.wallet-item {\n  display: flex;\n  align-items: center;\n  padding: 1.5rem;\n  border: 2px solid #eee;\n  border-radius: 15px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  background: white;\n}\n\n.wallet-item:hover {\n  border-color: #667eea;\n  transform: translateY(-2px);\n  box-shadow: 0 5px 15px rgba(102, 126, 234, 0.2);\n}\n\n.wallet-item.connecting {\n  border-color: #667eea;\n  background: #f0f4ff;\n}\n\n.wallet-icon {\n  width: 48px;\n  height: 48px;\n  margin-right: 1rem;\n  border-radius: 8px;\n  background: #f5f5f5;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.wallet-icon img {\n  width: 32px;\n  height: 32px;\n}\n\n.wallet-info {\n  flex: 1;\n}\n\n.wallet-info h3 {\n  margin: 0 0 0.5rem 0;\n  color: #333;\n  font-size: 1.1rem;\n}\n\n.wallet-info p {\n  margin: 0;\n  color: #666;\n  font-size: 0.9rem;\n}\n\n.wallet-arrow {\n  color: #667eea;\n  font-size: 1.2rem;\n  font-weight: bold;\n}\n\n.error-message {\n  margin-top: 1rem;\n  padding: 1rem;\n  background: #ffe6e6;\n  color: #cc0000;\n  border-radius: 8px;\n  text-align: center;\n}\n\n.connecting .wallet-arrow {\n  animation: pulse 1s infinite;\n}\n\n@keyframes pulse {\n  0% { opacity: 1; }\n  50% { opacity: 0.5; }\n  100% { opacity: 1; }\n}\n</style> "],"mappings":"AAgCA,SAASA,SAAQ,QAAS,YAAW;AACrC,SAASC,WAAU,QAAS,cAAa;AAEzC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIJ,SAAS,CAAC;IACzB,MAAMK,QAAO,GAAIJ,WAAW,CAAC;;IAE7B;IACA,MAAMK,UAAS,GAAKC,IAAI,IAAK;MAC3B,MAAMC,WAAU,GAAIJ,MAAM,CAACK,YAAY,CAACC,KAAK,CAACH,IAAG;MACjD,MAAMI,SAAQ,GAAIH,WAAW,CAACI,UAAU,CAAC,KAAK;MAC9C,MAAMC,UAAS,GAAIF,SAAQ,GAAI,MAAMJ,IAAI,EAAC,GAAIA,IAAG;MACjDH,MAAM,CAACU,IAAI,CAACD,UAAU;IACxB;IAEA,OAAO;MACLT,MAAM;MACNC,QAAQ;MACRC;IACF;EACF,CAAC;EACDS,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,IAAI;MAChBC,KAAK,EAAE,IAAI;MACXC,OAAO,EAAE,CACP;QACEC,EAAE,EAAE,UAAU;QACdjB,IAAI,EAAE,UAAU;QAChBkB,WAAW,EAAE,eAAe;QAC5BC,IAAI,EAAE;MACR,CAAC,EACD;QACEF,EAAE,EAAE,SAAS;QACbjB,IAAI,EAAE,SAAS;QACfkB,WAAW,EAAE,cAAc;QAC3BC,IAAI,EAAE;MACR,CAAC,EACD;QACEF,EAAE,EAAE,eAAe;QACnBjB,IAAI,EAAE,eAAe;QACrBkB,WAAW,EAAE,mBAAmB;QAChCC,IAAI,EAAE;MACR;IAEJ;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAACC,MAAM,EAAE;MAC1B,IAAI,CAACR,UAAS,GAAIQ,MAAM,CAACL,EAAC;MAC1B,IAAI,CAACF,KAAI,GAAI,IAAG;MAEhB,IAAI;QACF;QACA,MAAM,IAAIQ,OAAO,CAACC,OAAM,IAAKC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC;;QAEtD;QACAE,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEL,MAAM,CAACtB,IAAI;;QAEhC;QACA,MAAM4B,WAAU,GAAI,IAAG,GAAIC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,EAAE;QAClE,IAAI,CAAC7B,QAAQ,CAACkB,aAAa,CAACO,WAAW,EAAEN,MAAM,CAACL,EAAE;;QAElD;QACA,IAAI,CAACb,UAAU,CAAC,YAAY;MAE9B,EAAE,OAAOW,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAI,UAAS;QACtBW,OAAO,CAACX,KAAK,CAAC,SAAS,EAAEA,KAAK;MAChC,UAAU;QACR,IAAI,CAACD,UAAS,GAAI,IAAG;MACvB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}