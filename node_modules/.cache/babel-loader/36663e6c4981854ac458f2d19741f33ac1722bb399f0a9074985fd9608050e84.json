{"ast":null,"code":"import { ref, onMounted, onUnmounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useI18n } from 'vue-i18n';\nimport { useAppStore } from '@/stores/app';\nexport default {\n  name: 'InitialPage',\n  setup() {\n    const router = useRouter();\n    const {\n      locale\n    } = useI18n();\n    const appStore = useAppStore();\n\n    // 响应式数据\n    const videoElement = ref(null);\n    const rippleElement = ref(null);\n    const particlesContainer = ref(null);\n    const videoLoaded = ref(false);\n    const videoEnded = ref(false);\n    const showRipple = ref(false);\n    const canEnter = ref(false);\n\n    // 视频源路径 - 这里先用占位符，等用户上传后替换\n    const videoSrc = ref('/videos/temple-intro.mp4');\n    let rippleTimer = null;\n    let particles = [];\n    let animationFrame = null;\n\n    // 视频加载完成\n    const onVideoLoaded = () => {\n      videoLoaded.value = true;\n      // 自动播放视频\n      setTimeout(() => {\n        if (videoElement.value) {\n          videoElement.value.play().catch(error => {\n            console.log('视频自动播放失败:', error);\n            // 如果自动播放失败，显示进入按钮\n            canEnter.value = true;\n          });\n        }\n      }, 500);\n    };\n\n    // 视频播放结束\n    const onVideoEnded = () => {\n      videoEnded.value = true;\n      canEnter.value = true;\n      showRipple.value = true;\n    };\n\n    // 开始涟漪效果\n    const startRipple = () => {\n      if (!canEnter.value) return;\n      showRipple.value = true;\n      rippleTimer = setInterval(() => {\n        createRipple();\n      }, 1000);\n    };\n\n    // 停止涟漪效果\n    const stopRipple = () => {\n      showRipple.value = false;\n      if (rippleTimer) {\n        clearInterval(rippleTimer);\n        rippleTimer = null;\n      }\n    };\n\n    // 创建涟漪\n    const createRipple = () => {\n      if (!rippleElement.value) return;\n      const ripple = document.createElement('div');\n      ripple.className = 'ripple-wave';\n      rippleElement.value.appendChild(ripple);\n\n      // 动画完成后移除元素\n      setTimeout(() => {\n        if (ripple.parentNode) {\n          ripple.parentNode.removeChild(ripple);\n        }\n      }, 2000);\n    };\n\n    // 处理点击事件\n    const handleClick = () => {\n      if (canEnter.value) {\n        enterSite();\n      } else if (videoElement.value && videoElement.value.paused) {\n        // 如果视频暂停，点击播放\n        videoElement.value.play();\n      }\n    };\n\n    // 进入网站\n    const enterSite = () => {\n      appStore.setLoading(true);\n\n      // 添加退场动画\n      const content = document.querySelector('.content-wrapper');\n      if (content) {\n        content.style.transform = 'scale(1.1)';\n        content.style.opacity = '0';\n      }\n      setTimeout(() => {\n        appStore.setLoading(false);\n        const nextRoute = locale.value === 'en-US' ? '/en/wish' : '/wish';\n        router.push(nextRoute);\n      }, 1000);\n    };\n\n    // 初始化粒子效果\n    const initParticles = () => {\n      if (!particlesContainer.value) return;\n      const container = particlesContainer.value;\n      const particleCount = 50;\n      for (let i = 0; i < particleCount; i++) {\n        const particle = {\n          x: Math.random() * window.innerWidth,\n          y: Math.random() * window.innerHeight,\n          size: Math.random() * 3 + 1,\n          speedX: (Math.random() - 0.5) * 0.5,\n          speedY: (Math.random() - 0.5) * 0.5,\n          opacity: Math.random() * 0.5 + 0.2\n        };\n        particles.push(particle);\n        const particleElement = document.createElement('div');\n        particleElement.className = 'particle';\n        particleElement.style.cssText = `\n          position: absolute;\n          width: ${particle.size}px;\n          height: ${particle.size}px;\n          background: radial-gradient(circle, rgba(212, 175, 55, ${particle.opacity}) 0%, transparent 70%);\n          border-radius: 50%;\n          pointer-events: none;\n        `;\n        container.appendChild(particleElement);\n      }\n      animateParticles();\n    };\n\n    // 粒子动画\n    const animateParticles = () => {\n      const container = particlesContainer.value;\n      if (!container) return;\n      const particleElements = container.children;\n      particles.forEach((particle, index) => {\n        particle.x += particle.speedX;\n        particle.y += particle.speedY;\n\n        // 边界检测\n        if (particle.x < 0 || particle.x > window.innerWidth) {\n          particle.speedX *= -1;\n        }\n        if (particle.y < 0 || particle.y > window.innerHeight) {\n          particle.speedY *= -1;\n        }\n\n        // 更新DOM元素位置\n        const element = particleElements[index];\n        if (element) {\n          element.style.left = particle.x + 'px';\n          element.style.top = particle.y + 'px';\n        }\n      });\n      animationFrame = requestAnimationFrame(animateParticles);\n    };\n\n    // 组件挂载\n    onMounted(() => {\n      // 初始化应用状态\n      appStore.initializeFromStorage();\n\n      // 初始化粒子效果\n      setTimeout(() => {\n        initParticles();\n      }, 1000);\n\n      // 如果没有视频文件，直接显示进入按钮\n      setTimeout(() => {\n        if (!videoLoaded.value) {\n          videoLoaded.value = true;\n          canEnter.value = true;\n        }\n      }, 3000);\n    });\n\n    // 组件卸载\n    onUnmounted(() => {\n      if (rippleTimer) {\n        clearInterval(rippleTimer);\n      }\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame);\n      }\n    });\n    return {\n      videoElement,\n      rippleElement,\n      particlesContainer,\n      videoLoaded,\n      videoEnded,\n      showRipple,\n      canEnter,\n      videoSrc,\n      onVideoLoaded,\n      onVideoEnded,\n      startRipple,\n      stopRipple,\n      handleClick,\n      enterSite\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","useRouter","useI18n","useAppStore","name","setup","router","locale","appStore","videoElement","rippleElement","particlesContainer","videoLoaded","videoEnded","showRipple","canEnter","videoSrc","rippleTimer","particles","animationFrame","onVideoLoaded","value","setTimeout","play","catch","error","console","log","onVideoEnded","startRipple","setInterval","createRipple","stopRipple","clearInterval","ripple","document","createElement","className","appendChild","parentNode","removeChild","handleClick","enterSite","paused","setLoading","content","querySelector","style","transform","opacity","nextRoute","push","initParticles","container","particleCount","i","particle","x","Math","random","window","innerWidth","y","innerHeight","size","speedX","speedY","particleElement","cssText","animateParticles","particleElements","children","forEach","index","element","left","top","requestAnimationFrame","initializeFromStorage","cancelAnimationFrame"],"sources":["/Users/Jordan/workSpace/temple/src/views/InitialPage.vue"],"sourcesContent":["<template>\n  <div class=\"initial-page fullscreen temple-bg\">\n    <!-- 背景视频 -->\n    <div class=\"video-container\" v-if=\"!videoLoaded\">\n      <div class=\"loading-placeholder\">\n        <div class=\"loading-spinner\"></div>\n        <p>{{ $t('initial.loadingVideo') }}</p>\n      </div>\n    </div>\n    \n    <!-- 主要内容 -->\n    <div class=\"content-wrapper\" v-show=\"videoLoaded\">\n      <div class=\"video-section\">\n        <video\n          ref=\"videoElement\"\n          class=\"intro-video\"\n          :src=\"videoSrc\"\n          muted\n          preload=\"auto\"\n          @loadeddata=\"onVideoLoaded\"\n          @ended=\"onVideoEnded\"\n        />\n        \n        <!-- 涟漪效果覆盖层 -->\n        <div \n          class=\"ripple-overlay\"\n          :class=\"{ 'show-ripple': showRipple }\"\n          @click=\"handleClick\"\n          @mouseenter=\"startRipple\"\n          @mouseleave=\"stopRipple\"\n        >\n          <div class=\"ripple-effect\" ref=\"rippleElement\"></div>\n        </div>\n      </div>\n      \n      <!-- 标题和描述 -->\n      <div class=\"title-section\">\n        <h1 class=\"main-title\">{{ $t('initial.title') }}</h1>\n        <h2 class=\"subtitle\">{{ $t('initial.subtitle') }}</h2>\n        <p class=\"description\">{{ $t('initial.description') }}</p>\n        \n        <!-- 进入按钮 -->\n        <button \n          class=\"enter-btn btn btn-primary btn-lg ripple\"\n          :class=\"{ 'show': canEnter }\"\n          @click=\"enterSite\"\n          :disabled=\"!canEnter\"\n        >\n          {{ $t('initial.enterPrompt') }}\n        </button>\n      </div>\n    </div>\n    \n    <!-- 粒子效果背景 -->\n    <div class=\"particles-background\" ref=\"particlesContainer\"></div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, onUnmounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useI18n } from 'vue-i18n'\nimport { useAppStore } from '@/stores/app'\n\nexport default {\n  name: 'InitialPage',\n  setup() {\n    const router = useRouter()\n    const { locale } = useI18n()\n    const appStore = useAppStore()\n    \n    // 响应式数据\n    const videoElement = ref(null)\n    const rippleElement = ref(null)\n    const particlesContainer = ref(null)\n    const videoLoaded = ref(false)\n    const videoEnded = ref(false)\n    const showRipple = ref(false)\n    const canEnter = ref(false)\n    \n    // 视频源路径 - 这里先用占位符，等用户上传后替换\n    const videoSrc = ref('/videos/temple-intro.mp4')\n    \n    let rippleTimer = null\n    let particles = []\n    let animationFrame = null\n    \n    // 视频加载完成\n    const onVideoLoaded = () => {\n      videoLoaded.value = true\n      // 自动播放视频\n      setTimeout(() => {\n        if (videoElement.value) {\n          videoElement.value.play().catch(error => {\n            console.log('视频自动播放失败:', error)\n            // 如果自动播放失败，显示进入按钮\n            canEnter.value = true\n          })\n        }\n      }, 500)\n    }\n    \n    // 视频播放结束\n    const onVideoEnded = () => {\n      videoEnded.value = true\n      canEnter.value = true\n      showRipple.value = true\n    }\n    \n    // 开始涟漪效果\n    const startRipple = () => {\n      if (!canEnter.value) return\n      \n      showRipple.value = true\n      rippleTimer = setInterval(() => {\n        createRipple()\n      }, 1000)\n    }\n    \n    // 停止涟漪效果\n    const stopRipple = () => {\n      showRipple.value = false\n      if (rippleTimer) {\n        clearInterval(rippleTimer)\n        rippleTimer = null\n      }\n    }\n    \n    // 创建涟漪\n    const createRipple = () => {\n      if (!rippleElement.value) return\n      \n      const ripple = document.createElement('div')\n      ripple.className = 'ripple-wave'\n      rippleElement.value.appendChild(ripple)\n      \n      // 动画完成后移除元素\n      setTimeout(() => {\n        if (ripple.parentNode) {\n          ripple.parentNode.removeChild(ripple)\n        }\n      }, 2000)\n    }\n    \n    // 处理点击事件\n    const handleClick = () => {\n      if (canEnter.value) {\n        enterSite()\n      } else if (videoElement.value && videoElement.value.paused) {\n        // 如果视频暂停，点击播放\n        videoElement.value.play()\n      }\n    }\n    \n    // 进入网站\n    const enterSite = () => {\n      appStore.setLoading(true)\n      \n      // 添加退场动画\n      const content = document.querySelector('.content-wrapper')\n      if (content) {\n        content.style.transform = 'scale(1.1)'\n        content.style.opacity = '0'\n      }\n      \n      setTimeout(() => {\n        appStore.setLoading(false)\n        const nextRoute = locale.value === 'en-US' ? '/en/wish' : '/wish'\n        router.push(nextRoute)\n      }, 1000)\n    }\n    \n    // 初始化粒子效果\n    const initParticles = () => {\n      if (!particlesContainer.value) return\n      \n      const container = particlesContainer.value\n      const particleCount = 50\n      \n      for (let i = 0; i < particleCount; i++) {\n        const particle = {\n          x: Math.random() * window.innerWidth,\n          y: Math.random() * window.innerHeight,\n          size: Math.random() * 3 + 1,\n          speedX: (Math.random() - 0.5) * 0.5,\n          speedY: (Math.random() - 0.5) * 0.5,\n          opacity: Math.random() * 0.5 + 0.2\n        }\n        particles.push(particle)\n        \n        const particleElement = document.createElement('div')\n        particleElement.className = 'particle'\n        particleElement.style.cssText = `\n          position: absolute;\n          width: ${particle.size}px;\n          height: ${particle.size}px;\n          background: radial-gradient(circle, rgba(212, 175, 55, ${particle.opacity}) 0%, transparent 70%);\n          border-radius: 50%;\n          pointer-events: none;\n        `\n        container.appendChild(particleElement)\n      }\n      \n      animateParticles()\n    }\n    \n    // 粒子动画\n    const animateParticles = () => {\n      const container = particlesContainer.value\n      if (!container) return\n      \n      const particleElements = container.children\n      \n      particles.forEach((particle, index) => {\n        particle.x += particle.speedX\n        particle.y += particle.speedY\n        \n        // 边界检测\n        if (particle.x < 0 || particle.x > window.innerWidth) {\n          particle.speedX *= -1\n        }\n        if (particle.y < 0 || particle.y > window.innerHeight) {\n          particle.speedY *= -1\n        }\n        \n        // 更新DOM元素位置\n        const element = particleElements[index]\n        if (element) {\n          element.style.left = particle.x + 'px'\n          element.style.top = particle.y + 'px'\n        }\n      })\n      \n      animationFrame = requestAnimationFrame(animateParticles)\n    }\n    \n    // 组件挂载\n    onMounted(() => {\n      // 初始化应用状态\n      appStore.initializeFromStorage()\n      \n      // 初始化粒子效果\n      setTimeout(() => {\n        initParticles()\n      }, 1000)\n      \n      // 如果没有视频文件，直接显示进入按钮\n      setTimeout(() => {\n        if (!videoLoaded.value) {\n          videoLoaded.value = true\n          canEnter.value = true\n        }\n      }, 3000)\n    })\n    \n    // 组件卸载\n    onUnmounted(() => {\n      if (rippleTimer) {\n        clearInterval(rippleTimer)\n      }\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n    })\n    \n    return {\n      videoElement,\n      rippleElement,\n      particlesContainer,\n      videoLoaded,\n      videoEnded,\n      showRipple,\n      canEnter,\n      videoSrc,\n      onVideoLoaded,\n      onVideoEnded,\n      startRipple,\n      stopRipple,\n      handleClick,\n      enterSite\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.initial-page {\n  background: linear-gradient(135deg, \n    #d4af37 0%, \n    #f4d03f 25%, \n    #d4af37 50%, \n    #b8860b 75%, \n    #d4af37 100%\n  );\n  overflow: hidden;\n  position: relative;\n}\n\n.video-container,\n.content-wrapper {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n}\n\n.loading-placeholder {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: white;\n  \n  .loading-spinner {\n    margin-bottom: 1rem;\n  }\n}\n\n.video-section {\n  position: relative;\n  max-width: 80%;\n  max-height: 60%;\n  margin-bottom: 2rem;\n}\n\n.intro-video {\n  width: 100%;\n  height: auto;\n  border-radius: var(--border-radius-xl);\n  box-shadow: var(--shadow-lg);\n}\n\n.ripple-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n  border-radius: var(--border-radius-xl);\n  transition: opacity var(--transition-normal);\n  \n  &.show-ripple {\n    background: rgba(255, 255, 255, 0.1);\n  }\n}\n\n.ripple-effect {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  border-radius: var(--border-radius-xl);\n}\n\n.ripple-wave {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 20px;\n  height: 20px;\n  background: rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  transform: translate(-50%, -50%) scale(0);\n  animation: rippleAnimation 2s ease-out infinite;\n}\n\n@keyframes rippleAnimation {\n  0% {\n    transform: translate(-50%, -50%) scale(0);\n    opacity: 1;\n  }\n  100% {\n    transform: translate(-50%, -50%) scale(20);\n    opacity: 0;\n  }\n}\n\n.title-section {\n  text-align: center;\n  color: white;\n  max-width: 600px;\n  padding: 0 2rem;\n}\n\n.main-title {\n  font-size: 3rem;\n  font-weight: 700;\n  margin-bottom: 1rem;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n  animation: fadeInUp 1s ease-out;\n}\n\n.subtitle {\n  font-size: 1.5rem;\n  font-weight: 500;\n  margin-bottom: 1rem;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);\n  animation: fadeInUp 1s ease-out 0.2s both;\n}\n\n.description {\n  font-size: 1.1rem;\n  margin-bottom: 2rem;\n  opacity: 0.9;\n  animation: fadeInUp 1s ease-out 0.4s both;\n}\n\n.enter-btn {\n  opacity: 0;\n  transform: translateY(20px);\n  transition: all var(--transition-normal);\n  \n  &.show {\n    opacity: 1;\n    transform: translateY(0);\n  }\n  \n  &:hover {\n    transform: translateY(-2px) scale(1.05);\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\n  }\n}\n\n.particles-background {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 1;\n}\n\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n// 响应式设计\n@media (max-width: 768px) {\n  .video-section {\n    max-width: 95%;\n    max-height: 50%;\n    margin-bottom: 1.5rem;\n  }\n  \n  .main-title {\n    font-size: 2rem;\n  }\n  \n  .subtitle {\n    font-size: 1.2rem;\n  }\n  \n  .description {\n    font-size: 1rem;\n  }\n  \n  .title-section {\n    padding: 0 1rem;\n  }\n}\n\n@media (max-width: 480px) {\n  .main-title {\n    font-size: 1.75rem;\n  }\n  \n  .subtitle {\n    font-size: 1rem;\n  }\n  \n  .description {\n    font-size: 0.9rem;\n    margin-bottom: 1.5rem;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}