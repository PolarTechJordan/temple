{"ast":null,"code":"import { ref, computed } from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport { useRouter } from 'vue-router';\nimport { useAppStore } from './stores/app';\nexport default {\n  name: 'App',\n  setup() {\n    const {\n      locale\n    } = useI18n();\n    const router = useRouter();\n    const loading = ref(false);\n\n    // 当前语言\n    const currentLocale = computed(() => locale.value);\n\n    // 切换语言\n    const switchLanguage = lang => {\n      locale.value = lang;\n      // 根据语言切换路由\n      const currentRoute = router.currentRoute.value;\n      if (lang === 'en-US') {\n        // 切换到英文路由\n        if (!currentRoute.path.startsWith('/en')) {\n          router.push('/en' + currentRoute.path);\n        }\n      } else {\n        // 切换到中文路由\n        if (currentRoute.path.startsWith('/en')) {\n          router.push(currentRoute.path.replace('/en', ''));\n        }\n      }\n    };\n    return {\n      loading,\n      currentLocale,\n      switchLanguage\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","useI18n","useRouter","useAppStore","name","setup","locale","router","loading","currentLocale","value","switchLanguage","lang","currentRoute","path","startsWith","push","replace"],"sources":["/Users/Jordan/workSpace/temple/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <!-- 语言切换按钮 -->\n    <div class=\"language-switcher\">\n      <button \n        @click=\"switchLanguage('zh-CN')\"\n        :class=\"{ active: currentLocale === 'zh-CN' }\"\n      >\n        中文\n      </button>\n      <button \n        @click=\"switchLanguage('en-US')\"\n        :class=\"{ active: currentLocale === 'en-US' }\"\n      >\n        English\n      </button>\n    </div>\n\n    <!-- 路由视图 -->\n    <router-view />\n\n    <!-- 全局加载动画 -->\n    <div v-if=\"loading\" class=\"global-loading\">\n      <div class=\"loading-spinner\"></div>\n      <p>{{ $t('common.loading') }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport { useRouter } from 'vue-router'\nimport { useAppStore } from './stores/app'\n\nexport default {\n  name: 'App',\n  setup() {\n    const { locale } = useI18n()\n    const router = useRouter()\n\n    const loading = ref(false)\n\n    // 当前语言\n    const currentLocale = computed(() => locale.value)\n\n    // 切换语言\n    const switchLanguage = (lang) => {\n      locale.value = lang\n      // 根据语言切换路由\n      const currentRoute = router.currentRoute.value\n      if (lang === 'en-US') {\n        // 切换到英文路由\n        if (!currentRoute.path.startsWith('/en')) {\n          router.push('/en' + currentRoute.path)\n        }\n      } else {\n        // 切换到中文路由\n        if (currentRoute.path.startsWith('/en')) {\n          router.push(currentRoute.path.replace('/en', ''))\n        }\n      }\n    }\n\n    return {\n      loading,\n      currentLocale,\n      switchLanguage\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  min-height: 100vh;\n  position: relative;\n}\n\n.language-switcher {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  z-index: 1000;\n  display: flex;\n  gap: 10px;\n\n  button {\n    padding: 8px 16px;\n    border: 1px solid #ddd;\n    background: white;\n    border-radius: 4px;\n    cursor: pointer;\n    transition: all 0.3s;\n\n    &:hover {\n      background: #f5f5f5;\n    }\n\n    &.active {\n      background: #007bff;\n      color: white;\n      border-color: #007bff;\n    }\n  }\n}\n\n.global-loading {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  z-index: 9999;\n  color: white;\n\n  .loading-spinner {\n    width: 50px;\n    height: 50px;\n    border: 4px solid #f3f3f3;\n    border-top: 4px solid #007bff;\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n    margin-bottom: 20px;\n  }\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n}\n\n// 响应式设计\n@media (max-width: 768px) {\n  .language-switcher {\n    top: 10px;\n    right: 10px;\n    \n    button {\n      padding: 6px 12px;\n      font-size: 12px;\n    }\n  }\n}\n</style> "],"mappings":"AA8BA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAI;AAClC,SAASC,OAAM,QAAS,UAAS;AACjC,SAASC,SAAQ,QAAS,YAAW;AACrC,SAASC,WAAU,QAAS,cAAa;AAEzC,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,KAAKA,CAAA,EAAG;IACN,MAAM;MAAEC;IAAO,IAAIL,OAAO,CAAC;IAC3B,MAAMM,MAAK,GAAIL,SAAS,CAAC;IAEzB,MAAMM,OAAM,GAAIT,GAAG,CAAC,KAAK;;IAEzB;IACA,MAAMU,aAAY,GAAIT,QAAQ,CAAC,MAAMM,MAAM,CAACI,KAAK;;IAEjD;IACA,MAAMC,cAAa,GAAKC,IAAI,IAAK;MAC/BN,MAAM,CAACI,KAAI,GAAIE,IAAG;MAClB;MACA,MAAMC,YAAW,GAAIN,MAAM,CAACM,YAAY,CAACH,KAAI;MAC7C,IAAIE,IAAG,KAAM,OAAO,EAAE;QACpB;QACA,IAAI,CAACC,YAAY,CAACC,IAAI,CAACC,UAAU,CAAC,KAAK,CAAC,EAAE;UACxCR,MAAM,CAACS,IAAI,CAAC,KAAI,GAAIH,YAAY,CAACC,IAAI;QACvC;MACF,OAAO;QACL;QACA,IAAID,YAAY,CAACC,IAAI,CAACC,UAAU,CAAC,KAAK,CAAC,EAAE;UACvCR,MAAM,CAACS,IAAI,CAACH,YAAY,CAACC,IAAI,CAACG,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;QAClD;MACF;IACF;IAEA,OAAO;MACLT,OAAO;MACPC,aAAa;MACbE;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}