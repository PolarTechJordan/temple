{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"language-switcher\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"global-loading\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 语言切换按钮 \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.switchLanguage('zh-CN')),\n    class: _normalizeClass({\n      active: $setup.currentLocale === 'zh-CN'\n    })\n  }, \" 中文 \", 2 /* CLASS */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $setup.switchLanguage('en-US')),\n    class: _normalizeClass({\n      active: $setup.currentLocale === 'en-US'\n    })\n  }, \" English \", 2 /* CLASS */)]), _createCommentVNode(\" 路由视图 \"), _createVNode(_component_router_view), _createCommentVNode(\" 全局加载动画 \"), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n    class: \"loading-spinner\"\n  }, null, -1 /* CACHED */)), _createElementVNode(\"p\", null, _toDisplayString(_ctx.$t('common.loading')), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","onClick","_cache","$event","$setup","switchLanguage","_normalizeClass","active","currentLocale","_createVNode","_component_router_view","loading","_hoisted_3","_toDisplayString","_ctx","$t"],"sources":["/Users/Jordan/workSpace/temple/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <!-- 语言切换按钮 -->\n    <div class=\"language-switcher\">\n      <button \n        @click=\"switchLanguage('zh-CN')\"\n        :class=\"{ active: currentLocale === 'zh-CN' }\"\n      >\n        中文\n      </button>\n      <button \n        @click=\"switchLanguage('en-US')\"\n        :class=\"{ active: currentLocale === 'en-US' }\"\n      >\n        English\n      </button>\n    </div>\n\n    <!-- 路由视图 -->\n    <router-view />\n\n    <!-- 全局加载动画 -->\n    <div v-if=\"loading\" class=\"global-loading\">\n      <div class=\"loading-spinner\"></div>\n      <p>{{ $t('common.loading') }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport { useRouter } from 'vue-router'\nimport { useAppStore } from './stores/app'\n\nexport default {\n  name: 'App',\n  setup() {\n    const { locale } = useI18n()\n    const router = useRouter()\n\n    const loading = ref(false)\n\n    // 当前语言\n    const currentLocale = computed(() => locale.value)\n\n    // 切换语言\n    const switchLanguage = (lang) => {\n      locale.value = lang\n      // 根据语言切换路由\n      const currentRoute = router.currentRoute.value\n      if (lang === 'en-US') {\n        // 切换到英文路由\n        if (!currentRoute.path.startsWith('/en')) {\n          router.push('/en' + currentRoute.path)\n        }\n      } else {\n        // 切换到中文路由\n        if (currentRoute.path.startsWith('/en')) {\n          router.push(currentRoute.path.replace('/en', ''))\n        }\n      }\n    }\n\n    return {\n      loading,\n      currentLocale,\n      switchLanguage\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  min-height: 100vh;\n  position: relative;\n}\n\n.language-switcher {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  z-index: 1000;\n  display: flex;\n  gap: 10px;\n\n  button {\n    padding: 8px 16px;\n    border: 1px solid #ddd;\n    background: white;\n    border-radius: 4px;\n    cursor: pointer;\n    transition: all 0.3s;\n\n    &:hover {\n      background: #f5f5f5;\n    }\n\n    &.active {\n      background: #007bff;\n      color: white;\n      border-color: #007bff;\n    }\n  }\n}\n\n.global-loading {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  z-index: 9999;\n  color: white;\n\n  .loading-spinner {\n    width: 50px;\n    height: 50px;\n    border: 4px solid #f3f3f3;\n    border-top: 4px solid #007bff;\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n    margin-bottom: 20px;\n  }\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n}\n\n// 响应式设计\n@media (max-width: 768px) {\n  .language-switcher {\n    top: 10px;\n    right: 10px;\n    \n    button {\n      padding: 6px 12px;\n      font-size: 12px;\n    }\n  }\n}\n</style> "],"mappings":";;EACOA,EAAE,EAAC;AAAK;;EAENC,KAAK,EAAC;AAAmB;;;EAmBVA,KAAK,EAAC;;;;uBArB5BC,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBJC,mBAAA,YAAe,EACfC,mBAAA,CAaM,OAbNC,UAaM,GAZJD,mBAAA,CAKS;IAJNE,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,cAAc;IACrBV,KAAK,EAAAW,eAAA;MAAAC,MAAA,EAAYH,MAAA,CAAAI,aAAa;IAAA;KAChC,MAED,kBACAT,mBAAA,CAKS;IAJNE,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,cAAc;IACrBV,KAAK,EAAAW,eAAA;MAAAC,MAAA,EAAYH,MAAA,CAAAI,aAAa;IAAA;KAChC,WAED,iB,GAGFV,mBAAA,UAAa,EACbW,YAAA,CAAeC,sBAAA,GAEfZ,mBAAA,YAAe,EACJM,MAAA,CAAAO,OAAO,I,cAAlBf,mBAAA,CAGM,OAHNgB,UAGM,G,0BAFJb,mBAAA,CAAmC;IAA9BJ,KAAK,EAAC;EAAiB,4BAC5BI,mBAAA,CAAiC,WAAAc,gBAAA,CAA3BC,IAAA,CAAAC,EAAE,mC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}