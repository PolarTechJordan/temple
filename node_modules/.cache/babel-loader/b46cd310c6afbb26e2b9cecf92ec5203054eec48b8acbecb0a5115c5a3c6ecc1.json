{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-page\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  class: \"wallet-container\"\n};\nconst _hoisted_4 = {\n  class: \"wallet-list\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"wallet-icon\"\n};\nconst _hoisted_7 = [\"src\", \"alt\"];\nconst _hoisted_8 = {\n  class: \"wallet-info\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"error-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h1\", null, _toDisplayString(_ctx.$t('login.title')), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.wallets, wallet => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: wallet.id,\n      onClick: $event => $options.connectWallet(wallet),\n      class: _normalizeClass([\"wallet-item\", {\n        'connecting': $data.connecting === wallet.id\n      }])\n    }, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n      src: wallet.icon,\n      alt: wallet.name\n    }, null, 8 /* PROPS */, _hoisted_7)]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"h3\", null, _toDisplayString(wallet.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(wallet.description), 1 /* TEXT */)]), _cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n      class: \"wallet-arrow\"\n    }, \"→\", -1 /* CACHED */))], 10 /* CLASS, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))]), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","_ctx","$t","_hoisted_3","_hoisted_4","_Fragment","_renderList","$data","wallets","wallet","key","id","onClick","$event","$options","connectWallet","_normalizeClass","connecting","_hoisted_6","src","icon","alt","name","_hoisted_8","description","error","_hoisted_9"],"sources":["/Users/Jordan/workSpace/temple/src/views/LoginPage.vue"],"sourcesContent":["<template>\n  <div class=\"login-page\">\n    <div class=\"container\">\n      <h1>{{ $t('login.title') }}</h1>\n      <div class=\"wallet-container\">\n        <div class=\"wallet-list\">\n          <div \n            v-for=\"wallet in wallets\" \n            :key=\"wallet.id\"\n            @click=\"connectWallet(wallet)\"\n            class=\"wallet-item\"\n            :class=\"{ 'connecting': connecting === wallet.id }\"\n          >\n            <div class=\"wallet-icon\">\n              <img :src=\"wallet.icon\" :alt=\"wallet.name\" />\n            </div>\n            <div class=\"wallet-info\">\n              <h3>{{ wallet.name }}</h3>\n              <p>{{ wallet.description }}</p>\n            </div>\n            <div class=\"wallet-arrow\">→</div>\n          </div>\n        </div>\n        <div v-if=\"error\" class=\"error-message\">\n          {{ error }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      connecting: null,\n      error: null,\n      wallets: [\n        {\n          id: 'metamask',\n          name: 'MetaMask',\n          description: '连接到MetaMask钱包',\n          icon: '/images/metamask.png'\n        },\n        {\n          id: 'phantom',\n          name: 'Phantom',\n          description: '连接到Phantom钱包',\n          icon: '/images/phantom.png'\n        },\n        {\n          id: 'walletconnect',\n          name: 'WalletConnect',\n          description: '使用WalletConnect连接',\n          icon: '/images/walletconnect.png'\n        }\n      ]\n    }\n  },\n  methods: {\n    async connectWallet(wallet) {\n      this.connecting = wallet.id\n      this.error = null\n      \n      try {\n        // 模拟钱包连接\n        await new Promise(resolve => setTimeout(resolve, 2000))\n        \n        // 这里应该实际连接钱包\n        console.log('连接钱包:', wallet.name)\n        \n        // 保存连接状态\n        localStorage.setItem('walletConnected', 'true')\n        localStorage.setItem('walletType', wallet.id)\n        \n        // 跳转到算命页面\n        this.$router.push('/calculate')\n        \n      } catch (error) {\n        this.error = '连接失败，请重试'\n        console.error('钱包连接失败:', error)\n      } finally {\n        this.connecting = null\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login-page {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem;\n}\n\n.container {\n  max-width: 500px;\n  width: 100%;\n}\n\nh1 {\n  text-align: center;\n  color: white;\n  margin-bottom: 2rem;\n  font-size: 2.5rem;\n}\n\n.wallet-container {\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 20px;\n  padding: 2rem;\n  backdrop-filter: blur(10px);\n}\n\n.wallet-list {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.wallet-item {\n  display: flex;\n  align-items: center;\n  padding: 1.5rem;\n  border: 2px solid #eee;\n  border-radius: 15px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  background: white;\n}\n\n.wallet-item:hover {\n  border-color: #667eea;\n  transform: translateY(-2px);\n  box-shadow: 0 5px 15px rgba(102, 126, 234, 0.2);\n}\n\n.wallet-item.connecting {\n  border-color: #667eea;\n  background: #f0f4ff;\n}\n\n.wallet-icon {\n  width: 48px;\n  height: 48px;\n  margin-right: 1rem;\n  border-radius: 8px;\n  background: #f5f5f5;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.wallet-icon img {\n  width: 32px;\n  height: 32px;\n}\n\n.wallet-info {\n  flex: 1;\n}\n\n.wallet-info h3 {\n  margin: 0 0 0.5rem 0;\n  color: #333;\n  font-size: 1.1rem;\n}\n\n.wallet-info p {\n  margin: 0;\n  color: #666;\n  font-size: 0.9rem;\n}\n\n.wallet-arrow {\n  color: #667eea;\n  font-size: 1.2rem;\n  font-weight: bold;\n}\n\n.error-message {\n  margin-top: 1rem;\n  padding: 1rem;\n  background: #ffe6e6;\n  color: #cc0000;\n  border-radius: 8px;\n  text-align: center;\n}\n\n.connecting .wallet-arrow {\n  animation: pulse 1s infinite;\n}\n\n@keyframes pulse {\n  0% { opacity: 1; }\n  50% { opacity: 0.5; }\n  100% { opacity: 1; }\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAY;;EAChBA,KAAK,EAAC;AAAW;;EAEfA,KAAK,EAAC;AAAkB;;EACtBA,KAAK,EAAC;AAAa;;;EAQfA,KAAK,EAAC;AAAa;;;EAGnBA,KAAK,EAAC;AAAa;;;EAOVA,KAAK,EAAC;;;uBAtB9BC,mBAAA,CA2BM,OA3BNC,UA2BM,GA1BJC,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBJD,mBAAA,CAAgC,YAAAE,gBAAA,CAAzBC,IAAA,CAAAC,EAAE,iCACTJ,mBAAA,CAsBM,OAtBNK,UAsBM,GArBJL,mBAAA,CAiBM,OAjBNM,UAiBM,I,kBAhBJR,mBAAA,CAeMS,SAAA,QAAAC,WAAA,CAdaC,KAAA,CAAAC,OAAO,EAAjBC,MAAM;yBADfb,mBAAA,CAeM;MAbHc,GAAG,EAAED,MAAM,CAACE,EAAE;MACdC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,aAAa,CAACN,MAAM;MAC5Bd,KAAK,EAAAqB,eAAA,EAAC,aAAa;QAAA,cACKT,KAAA,CAAAU,UAAU,KAAKR,MAAM,CAACE;MAAE;QAEhDb,mBAAA,CAEM,OAFNoB,UAEM,GADJpB,mBAAA,CAA6C;MAAvCqB,GAAG,EAAEV,MAAM,CAACW,IAAI;MAAGC,GAAG,EAAEZ,MAAM,CAACa;2CAEvCxB,mBAAA,CAGM,OAHNyB,UAGM,GAFJzB,mBAAA,CAA0B,YAAAE,gBAAA,CAAnBS,MAAM,CAACa,IAAI,kBAClBxB,mBAAA,CAA+B,WAAAE,gBAAA,CAAzBS,MAAM,CAACe,WAAW,iB,6BAE1B1B,mBAAA,CAAiC;MAA5BH,KAAK,EAAC;IAAc,GAAC,GAAC,oB;oCAGpBY,KAAA,CAAAkB,KAAK,I,cAAhB7B,mBAAA,CAEM,OAFN8B,UAEM,EAAA1B,gBAAA,CADDO,KAAA,CAAAkB,KAAK,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}