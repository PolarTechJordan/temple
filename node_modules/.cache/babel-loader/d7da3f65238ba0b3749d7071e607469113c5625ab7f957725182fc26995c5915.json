{"ast":null,"code":"import { useRouter } from 'vue-router';\nimport { useI18n } from 'vue-i18n';\nimport { useAppStore } from '@/stores/app';\nexport default {\n  name: 'WorshipPage',\n  setup() {\n    const router = useRouter();\n    const {\n      t\n    } = useI18n();\n    const appStore = useAppStore();\n\n    // 语言感知的导航函数\n    const navigateTo = path => {\n      const currentPath = router.currentRoute.value.path;\n      const isEnglish = currentPath.startsWith('/en');\n      const targetPath = isEnglish ? `/en${path}` : path;\n      router.push(targetPath);\n    };\n    return {\n      router,\n      t,\n      appStore,\n      navigateTo\n    };\n  },\n  data() {\n    return {\n      worshipVideoSrc: '/videos/worship.mp4',\n      worshipMessage: '虔诚上香',\n      worshipDescription: '正在为您上香祈福...',\n      showContinueButton: false\n    };\n  },\n  mounted() {\n    // 如果没有视频文件，3秒后自动显示继续按钮\n    setTimeout(() => {\n      this.onVideoEnded();\n    }, 3000);\n  },\n  methods: {\n    onVideoEnded() {\n      this.worshipMessage = '上香完成';\n      this.worshipDescription = '神明已收到您的祈福，功德已增加！';\n      this.showContinueButton = true;\n\n      // 增加额外的功德分（上香完成奖励）\n      this.appStore.addMeritPoints(5);\n    },\n    continueToMerit() {\n      this.navigateTo('/merit');\n    }\n  }\n};","map":{"version":3,"names":["useRouter","useI18n","useAppStore","name","setup","router","t","appStore","navigateTo","path","currentPath","currentRoute","value","isEnglish","startsWith","targetPath","push","data","worshipVideoSrc","worshipMessage","worshipDescription","showContinueButton","mounted","setTimeout","onVideoEnded","methods","addMeritPoints","continueToMerit"],"sources":["/Users/Jordan/workSpace/temple/src/views/WorshipPage.vue"],"sourcesContent":["<template>\n  <div class=\"worship-page\">\n    <div class=\"container\">\n      <h1>{{ $t('worship.title') }}</h1>\n      <div class=\"worship-container\">\n        <div class=\"worship-video\">\n          <video\n            ref=\"worshipVideo\"\n            :src=\"worshipVideoSrc\"\n            autoplay\n            muted\n            @ended=\"onVideoEnded\"\n            class=\"video-player\"\n          ></video>\n        </div>\n        <div class=\"worship-message\">\n          <h2>{{ worshipMessage }}</h2>\n          <p>{{ worshipDescription }}</p>\n        </div>\n        <div v-if=\"showContinueButton\" class=\"continue-section\">\n          <button @click=\"continueToMerit\" class=\"continue-btn\">\n            查看功德\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { useRouter } from 'vue-router'\nimport { useI18n } from 'vue-i18n'\nimport { useAppStore } from '@/stores/app'\n\nexport default {\n  name: 'WorshipPage',\n  setup() {\n    const router = useRouter()\n    const { t } = useI18n()\n    const appStore = useAppStore()\n    \n    // 语言感知的导航函数\n    const navigateTo = (path) => {\n      const currentPath = router.currentRoute.value.path\n      const isEnglish = currentPath.startsWith('/en')\n      const targetPath = isEnglish ? `/en${path}` : path\n      router.push(targetPath)\n    }\n    \n    return {\n      router,\n      t,\n      appStore,\n      navigateTo\n    }\n  },\n  data() {\n    return {\n      worshipVideoSrc: '/videos/worship.mp4',\n      worshipMessage: '虔诚上香',\n      worshipDescription: '正在为您上香祈福...',\n      showContinueButton: false\n    }\n  },\n  mounted() {\n    // 如果没有视频文件，3秒后自动显示继续按钮\n    setTimeout(() => {\n      this.onVideoEnded()\n    }, 3000)\n  },\n  methods: {\n    onVideoEnded() {\n      this.worshipMessage = '上香完成'\n      this.worshipDescription = '神明已收到您的祈福，功德已增加！'\n      this.showContinueButton = true\n      \n      // 增加额外的功德分（上香完成奖励）\n      this.appStore.addMeritPoints(5)\n    },\n    continueToMerit() {\n      this.navigateTo('/merit')\n    }\n  }\n}\n</script>\n\n<style scoped>\n.worship-page {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem;\n}\n\n.container {\n  max-width: 600px;\n  width: 100%;\n}\n\nh1 {\n  text-align: center;\n  color: white;\n  margin-bottom: 2rem;\n  font-size: 2.5rem;\n}\n\n.worship-container {\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 20px;\n  padding: 2rem;\n  backdrop-filter: blur(10px);\n  text-align: center;\n}\n\n.worship-video {\n  margin-bottom: 2rem;\n}\n\n.video-player {\n  width: 100%;\n  max-width: 400px;\n  height: 300px;\n  border-radius: 15px;\n  object-fit: cover;\n}\n\n.worship-message {\n  margin-bottom: 2rem;\n}\n\n.worship-message h2 {\n  color: #333;\n  margin-bottom: 1rem;\n  font-size: 1.8rem;\n}\n\n.worship-message p {\n  color: #666;\n  font-size: 1.1rem;\n}\n\n.continue-btn {\n  padding: 1rem 2rem;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  border: none;\n  border-radius: 10px;\n  font-size: 1.2rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.continue-btn:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);\n}\n</style> "],"mappings":"AA8BA,SAASA,SAAQ,QAAS,YAAW;AACrC,SAASC,OAAM,QAAS,UAAS;AACjC,SAASC,WAAU,QAAS,cAAa;AAEzC,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIL,SAAS,CAAC;IACzB,MAAM;MAAEM;IAAE,IAAIL,OAAO,CAAC;IACtB,MAAMM,QAAO,GAAIL,WAAW,CAAC;;IAE7B;IACA,MAAMM,UAAS,GAAKC,IAAI,IAAK;MAC3B,MAAMC,WAAU,GAAIL,MAAM,CAACM,YAAY,CAACC,KAAK,CAACH,IAAG;MACjD,MAAMI,SAAQ,GAAIH,WAAW,CAACI,UAAU,CAAC,KAAK;MAC9C,MAAMC,UAAS,GAAIF,SAAQ,GAAI,MAAMJ,IAAI,EAAC,GAAIA,IAAG;MACjDJ,MAAM,CAACW,IAAI,CAACD,UAAU;IACxB;IAEA,OAAO;MACLV,MAAM;MACNC,CAAC;MACDC,QAAQ;MACRC;IACF;EACF,CAAC;EACDS,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,qBAAqB;MACtCC,cAAc,EAAE,MAAM;MACtBC,kBAAkB,EAAE,aAAa;MACjCC,kBAAkB,EAAE;IACtB;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACAC,UAAU,CAAC,MAAM;MACf,IAAI,CAACC,YAAY,CAAC;IACpB,CAAC,EAAE,IAAI;EACT,CAAC;EACDC,OAAO,EAAE;IACPD,YAAYA,CAAA,EAAG;MACb,IAAI,CAACL,cAAa,GAAI,MAAK;MAC3B,IAAI,CAACC,kBAAiB,GAAI,kBAAiB;MAC3C,IAAI,CAACC,kBAAiB,GAAI,IAAG;;MAE7B;MACA,IAAI,CAACd,QAAQ,CAACmB,cAAc,CAAC,CAAC;IAChC,CAAC;IACDC,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACnB,UAAU,CAAC,QAAQ;IAC1B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}