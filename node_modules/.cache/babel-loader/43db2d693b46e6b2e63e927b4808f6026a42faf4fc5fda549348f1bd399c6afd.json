{"ast":null,"code":"import { useRouter } from 'vue-router';\nimport { useAppStore } from '@/stores/app';\nimport { useI18n } from 'vue-i18n';\nexport default {\n  name: 'PaymentPage',\n  setup() {\n    const router = useRouter();\n    const appStore = useAppStore();\n    const {\n      t\n    } = useI18n();\n\n    // 语言感知的导航函数\n    const navigateTo = path => {\n      const currentPath = router.currentRoute.value.path;\n      const isEnglish = currentPath.startsWith('/en');\n      const targetPath = isEnglish ? `/en${path}` : path;\n      router.push(targetPath);\n    };\n    return {\n      router,\n      appStore,\n      t,\n      navigateTo\n    };\n  },\n  data() {\n    return {\n      paying: false,\n      paymentInfo: {}\n    };\n  },\n  mounted() {\n    // 从localStorage获取支付信息\n    const savedPaymentInfo = localStorage.getItem('paymentInfo');\n    if (savedPaymentInfo) {\n      try {\n        this.paymentInfo = JSON.parse(savedPaymentInfo);\n      } catch (error) {\n        console.error('Failed to parse payment info:', error);\n        this.paymentInfo = {};\n      }\n    }\n\n    // 如果没有支付信息，设置默认值\n    if (!this.paymentInfo.incenseCount) {\n      this.paymentInfo = {\n        incenseCount: 1,\n        currency: 'SOL',\n        totalPrice: '0.01'\n      };\n    }\n  },\n  methods: {\n    async confirmPayment() {\n      this.paying = true;\n      try {\n        // 模拟支付过程\n        await new Promise(resolve => setTimeout(resolve, 3000));\n\n        // 添加香火记录到store\n        this.appStore.addIncenseRecord({\n          amount: this.paymentInfo.incenseCount,\n          currency: this.paymentInfo.currency,\n          totalPrice: this.paymentInfo.totalPrice,\n          status: 'completed'\n        });\n\n        // 增加功德分\n        const meritPoints = this.paymentInfo.incenseCount * 10;\n        this.appStore.addMeritPoints(meritPoints);\n\n        // 清除支付信息\n        localStorage.removeItem('paymentInfo');\n\n        // 支付成功，跳转到上香页面\n        this.navigateTo('/worship');\n      } catch (error) {\n        console.error('支付失败:', error);\n        alert('支付失败，请重试');\n      } finally {\n        this.paying = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["useRouter","useAppStore","useI18n","name","setup","router","appStore","t","navigateTo","path","currentPath","currentRoute","value","isEnglish","startsWith","targetPath","push","data","paying","paymentInfo","mounted","savedPaymentInfo","localStorage","getItem","JSON","parse","error","console","incenseCount","currency","totalPrice","methods","confirmPayment","Promise","resolve","setTimeout","addIncenseRecord","amount","status","meritPoints","addMeritPoints","removeItem","alert"],"sources":["/Users/Jordan/workSpace/temple/src/views/PaymentPage.vue"],"sourcesContent":["<template>\n  <div class=\"payment-page\">\n    <div class=\"container\">\n      <h1>{{ $t('payment.title') }}</h1>\n      <div class=\"payment-container\">\n        <div class=\"payment-summary\">\n          <h2>支付确认</h2>\n          <div class=\"summary-item\">\n            <span>香火数量:</span>\n            <span>{{ paymentInfo.incenseCount || 1 }}</span>\n          </div>\n          <div class=\"summary-item\">\n            <span>币种:</span>\n            <span>{{ paymentInfo.currency || 'SOL' }}</span>\n          </div>\n          <div class=\"summary-item total\">\n            <span>总计:</span>\n            <span>{{ paymentInfo.totalPrice || '0.01' }} {{ paymentInfo.currency || 'SOL' }}</span>\n          </div>\n        </div>\n        \n        <div class=\"payment-actions\">\n          <button \n            @click=\"confirmPayment\"\n            :disabled=\"paying\"\n            class=\"pay-btn\"\n          >\n            <span v-if=\"paying\">支付中...</span>\n            <span v-else>确认支付</span>\n          </button>\n        </div>\n        \n        <div v-if=\"paying\" class=\"payment-progress\">\n          <div class=\"spinner\"></div>\n          <p>正在处理支付...</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { useRouter } from 'vue-router'\nimport { useAppStore } from '@/stores/app'\nimport { useI18n } from 'vue-i18n'\n\nexport default {\n  name: 'PaymentPage',\n  setup() {\n    const router = useRouter()\n    const appStore = useAppStore()\n    const { t } = useI18n()\n    \n    // 语言感知的导航函数\n    const navigateTo = (path) => {\n      const currentPath = router.currentRoute.value.path\n      const isEnglish = currentPath.startsWith('/en')\n      const targetPath = isEnglish ? `/en${path}` : path\n      router.push(targetPath)\n    }\n    \n    return {\n      router,\n      appStore,\n      t,\n      navigateTo\n    }\n  },\n  data() {\n    return {\n      paying: false,\n      paymentInfo: {}\n    }\n  },\n  mounted() {\n    // 从localStorage获取支付信息\n    const savedPaymentInfo = localStorage.getItem('paymentInfo')\n    if (savedPaymentInfo) {\n      try {\n        this.paymentInfo = JSON.parse(savedPaymentInfo)\n      } catch (error) {\n        console.error('Failed to parse payment info:', error)\n        this.paymentInfo = {}\n      }\n    }\n    \n    // 如果没有支付信息，设置默认值\n    if (!this.paymentInfo.incenseCount) {\n      this.paymentInfo = {\n        incenseCount: 1,\n        currency: 'SOL',\n        totalPrice: '0.01'\n      }\n    }\n  },\n  methods: {\n    async confirmPayment() {\n      this.paying = true\n      \n      try {\n        // 模拟支付过程\n        await new Promise(resolve => setTimeout(resolve, 3000))\n        \n        // 添加香火记录到store\n        this.appStore.addIncenseRecord({\n          amount: this.paymentInfo.incenseCount,\n          currency: this.paymentInfo.currency,\n          totalPrice: this.paymentInfo.totalPrice,\n          status: 'completed'\n        })\n        \n        // 增加功德分\n        const meritPoints = this.paymentInfo.incenseCount * 10\n        this.appStore.addMeritPoints(meritPoints)\n        \n        // 清除支付信息\n        localStorage.removeItem('paymentInfo')\n        \n        // 支付成功，跳转到上香页面\n        this.navigateTo('/worship')\n        \n      } catch (error) {\n        console.error('支付失败:', error)\n        alert('支付失败，请重试')\n      } finally {\n        this.paying = false\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.payment-page {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem;\n}\n\n.container {\n  max-width: 500px;\n  width: 100%;\n}\n\nh1 {\n  text-align: center;\n  color: white;\n  margin-bottom: 2rem;\n  font-size: 2.5rem;\n}\n\n.payment-container {\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 20px;\n  padding: 2rem;\n  backdrop-filter: blur(10px);\n}\n\n.payment-summary {\n  margin-bottom: 2rem;\n}\n\n.payment-summary h2 {\n  color: #333;\n  margin-bottom: 1rem;\n  text-align: center;\n}\n\n.summary-item {\n  display: flex;\n  justify-content: space-between;\n  padding: 1rem 0;\n  border-bottom: 1px solid #eee;\n}\n\n.summary-item.total {\n  font-weight: 600;\n  font-size: 1.2rem;\n  color: #667eea;\n  border-bottom: none;\n}\n\n.pay-btn {\n  width: 100%;\n  padding: 1rem;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  border: none;\n  border-radius: 10px;\n  font-size: 1.2rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.pay-btn:hover:not(:disabled) {\n  transform: translateY(-2px);\n  box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);\n}\n\n.pay-btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.payment-progress {\n  text-align: center;\n  margin-top: 2rem;\n}\n\n.spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #667eea;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n  margin: 0 auto 1rem;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n</style> "],"mappings":"AA0CA,SAASA,SAAQ,QAAS,YAAW;AACrC,SAASC,WAAU,QAAS,cAAa;AACzC,SAASC,OAAM,QAAS,UAAS;AAEjC,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIL,SAAS,CAAC;IACzB,MAAMM,QAAO,GAAIL,WAAW,CAAC;IAC7B,MAAM;MAAEM;IAAE,IAAIL,OAAO,CAAC;;IAEtB;IACA,MAAMM,UAAS,GAAKC,IAAI,IAAK;MAC3B,MAAMC,WAAU,GAAIL,MAAM,CAACM,YAAY,CAACC,KAAK,CAACH,IAAG;MACjD,MAAMI,SAAQ,GAAIH,WAAW,CAACI,UAAU,CAAC,KAAK;MAC9C,MAAMC,UAAS,GAAIF,SAAQ,GAAI,MAAMJ,IAAI,EAAC,GAAIA,IAAG;MACjDJ,MAAM,CAACW,IAAI,CAACD,UAAU;IACxB;IAEA,OAAO;MACLV,MAAM;MACNC,QAAQ;MACRC,CAAC;MACDC;IACF;EACF,CAAC;EACDS,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,KAAK;MACbC,WAAW,EAAE,CAAC;IAChB;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,MAAMC,gBAAe,GAAIC,YAAY,CAACC,OAAO,CAAC,aAAa;IAC3D,IAAIF,gBAAgB,EAAE;MACpB,IAAI;QACF,IAAI,CAACF,WAAU,GAAIK,IAAI,CAACC,KAAK,CAACJ,gBAAgB;MAChD,EAAE,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK;QACpD,IAAI,CAACP,WAAU,GAAI,CAAC;MACtB;IACF;;IAEA;IACA,IAAI,CAAC,IAAI,CAACA,WAAW,CAACS,YAAY,EAAE;MAClC,IAAI,CAACT,WAAU,GAAI;QACjBS,YAAY,EAAE,CAAC;QACfC,QAAQ,EAAE,KAAK;QACfC,UAAU,EAAE;MACd;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI,CAACd,MAAK,GAAI,IAAG;MAEjB,IAAI;QACF;QACA,MAAM,IAAIe,OAAO,CAACC,OAAM,IAAKC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC;;QAEtD;QACA,IAAI,CAAC5B,QAAQ,CAAC8B,gBAAgB,CAAC;UAC7BC,MAAM,EAAE,IAAI,CAAClB,WAAW,CAACS,YAAY;UACrCC,QAAQ,EAAE,IAAI,CAACV,WAAW,CAACU,QAAQ;UACnCC,UAAU,EAAE,IAAI,CAACX,WAAW,CAACW,UAAU;UACvCQ,MAAM,EAAE;QACV,CAAC;;QAED;QACA,MAAMC,WAAU,GAAI,IAAI,CAACpB,WAAW,CAACS,YAAW,GAAI,EAAC;QACrD,IAAI,CAACtB,QAAQ,CAACkC,cAAc,CAACD,WAAW;;QAExC;QACAjB,YAAY,CAACmB,UAAU,CAAC,aAAa;;QAErC;QACA,IAAI,CAACjC,UAAU,CAAC,UAAU;MAE5B,EAAE,OAAOkB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK;QAC5BgB,KAAK,CAAC,UAAU;MAClB,UAAU;QACR,IAAI,CAACxB,MAAK,GAAI,KAAI;MACpB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}